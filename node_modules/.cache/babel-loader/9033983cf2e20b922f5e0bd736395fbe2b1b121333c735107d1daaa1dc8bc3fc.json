{"ast":null,"code":"var _jsxFileName = \"/Users/mackbook/React-Native/src/components/pokemon-card.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonCard = _ref => {\n  _s();\n  let {\n    pokemon,\n    borderColor = '#009688'\n  } = _ref;\n  const [color, setColor] = useState();\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n  const hiBorder = () => {\n    setColor('#f5f5f5'); // on remet la bordure en gris\n  };\n\n  // const formatDate = (date:Date) =>{\n  //     return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n  // }\n\n  const formatType = type => {\n    let color;\n    switch (type) {\n      case 'Feu':\n        color = 'red lighten-1';\n        break;\n      case 'Eau':\n        color = 'blue lighten-1';\n        break;\n      case 'Plante':\n        color = 'green lighten-1';\n        break;\n      case 'Insecte':\n        color = 'brown lighten-1';\n        break;\n      case 'Normal':\n        color = 'grey lighten-3';\n        break;\n      case 'Vol':\n        color = 'blue lighten-3';\n        break;\n      case 'Poison':\n        color = 'deep-purple accent-1';\n        break;\n      case 'Fée':\n        color = 'pink lighten-4';\n        break;\n      case 'Psy':\n        color = 'deep-purple darken-2';\n        break;\n      case 'Electrik':\n        color = 'lime accent-1';\n        break;\n      case 'Combat':\n        color = 'deep-orange';\n        break;\n      default:\n        color = 'grey';\n        break;\n    }\n    return `chip ${color}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col s6 m4\",\n    onMouseEnter: showBorder,\n    onMouseLeave: hiBorder,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        borderColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formatDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: formatType(type),\n                children: [\" \", type, \" \"]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(PokemonCard, \"82MkoYdCpCBLe6G9QQs4gyc+awE=\");\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","formatDate","PokemonCard","pokemon","borderColor","color","setColor","showBorder","hiBorder","formatType","type","picture","name","created","types","map"],"sources":["/Users/mackbook/React-Native/src/components/pokemon-card.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\n  \ntype Props = {\n  pokemon: Pokemon,\n  borderColor?: string\n};\n  \nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n\n    const [color, setColor] = useState<string>();\n\n    const showBorder = () =>{\n        setColor(borderColor);\n    }\n    const hiBorder = () =>{\n        setColor('#f5f5f5'); // on remet la bordure en gris\n    }\n\n    // const formatDate = (date:Date) =>{\n    //     return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n    // }\n\n    const formatType = (type: string): string => {\n        let color: string;\n       \n        switch (type) {\n          case 'Feu': \n            color = 'red lighten-1'; \n            break; \n          case 'Eau': \n            color = 'blue lighten-1'; \n            break; \n          case 'Plante': \n            color = 'green lighten-1'; \n            break; \n          case 'Insecte': \n            color = 'brown lighten-1'; \n            break; \n          case 'Normal': \n            color = 'grey lighten-3'; \n            break; \n          case 'Vol': \n            color = 'blue lighten-3'; \n            break; \n          case 'Poison': \n            color = 'deep-purple accent-1'; \n            break; \n          case 'Fée': \n            color = 'pink lighten-4'; \n            break; \n          case 'Psy': \n            color = 'deep-purple darken-2'; \n            break; \n          case 'Electrik': \n            color = 'lime accent-1'; \n            break; \n          case 'Combat': \n            color = 'deep-orange'; \n            break; \n          default: \n            color = 'grey'; \n            break; \n        }\n       \n        return `chip ${color}`;\n      }\n\n    return (\n        <div className=\"col s6 m4\" onMouseEnter={showBorder} onMouseLeave={hiBorder}>\n        <div className=\"card horizontal\" style={{borderColor: color}}>\n            <div className=\"card-image\"> \n            <img src={pokemon.picture} alt={pokemon.name}/>\n            </div>\n            <div className=\"card-stacked\">\n            <div className=\"card-content\">\n                <p>{pokemon.name}</p>\n                <p><small>{formatDate(pokemon.created)}</small></p>\n                <p><small>{pokemon.types.map(type =>(\n                    <span key={type} className = {formatType(type)}> {type} </span>\n                ))}</small></p>\n                {/* <p><small>{pokemon.created.toString()}</small></p> */}\n            </div>\n            </div>\n        </div> \n        </div>\n    );\n    }\n  \n    export default PokemonCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAuBC,QAAQ,QAAQ,OAAO;AAE1D,OAAO,oBAAoB;AAC3B,OAAOC,UAAU,MAAM,wBAAwB;AAAC;AAOhD,MAAMC,WAAqC,GAAG,QAAwC;EAAA;EAAA,IAAvC;IAACC,OAAO;IAAEC,WAAW,GAAG;EAAS,CAAC;EAE7E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,EAAU;EAE5C,MAAMO,UAAU,GAAG,MAAK;IACpBD,QAAQ,CAACF,WAAW,CAAC;EACzB,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAK;IAClBF,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED;EACA;EACA;;EAEA,MAAMG,UAAU,GAAIC,IAAY,IAAa;IACzC,IAAIL,KAAa;IAEjB,QAAQK,IAAI;MACV,KAAK,KAAK;QACRL,KAAK,GAAG,eAAe;QACvB;MACF,KAAK,KAAK;QACRA,KAAK,GAAG,gBAAgB;QACxB;MACF,KAAK,QAAQ;QACXA,KAAK,GAAG,iBAAiB;QACzB;MACF,KAAK,SAAS;QACZA,KAAK,GAAG,iBAAiB;QACzB;MACF,KAAK,QAAQ;QACXA,KAAK,GAAG,gBAAgB;QACxB;MACF,KAAK,KAAK;QACRA,KAAK,GAAG,gBAAgB;QACxB;MACF,KAAK,QAAQ;QACXA,KAAK,GAAG,sBAAsB;QAC9B;MACF,KAAK,KAAK;QACRA,KAAK,GAAG,gBAAgB;QACxB;MACF,KAAK,KAAK;QACRA,KAAK,GAAG,sBAAsB;QAC9B;MACF,KAAK,UAAU;QACbA,KAAK,GAAG,eAAe;QACvB;MACF,KAAK,QAAQ;QACXA,KAAK,GAAG,aAAa;QACrB;MACF;QACEA,KAAK,GAAG,MAAM;QACd;IAAM;IAGV,OAAQ,QAAOA,KAAM,EAAC;EACxB,CAAC;EAEH,oBACI;IAAK,SAAS,EAAC,WAAW;IAAC,YAAY,EAAEE,UAAW;IAAC,YAAY,EAAEC,QAAS;IAAA,uBAC5E;MAAK,SAAS,EAAC,iBAAiB;MAAC,KAAK,EAAE;QAACJ,WAAW,EAAEC;MAAK,CAAE;MAAA,wBACzD;QAAK,SAAS,EAAC,YAAY;QAAA,uBAC3B;UAAK,GAAG,EAAEF,OAAO,CAACQ,OAAQ;UAAC,GAAG,EAAER,OAAO,CAACS;QAAK;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACzC,eACN;QAAK,SAAS,EAAC,cAAc;QAAA,uBAC7B;UAAK,SAAS,EAAC,cAAc;UAAA,wBACzB;YAAA,UAAIT,OAAO,CAACS;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACrB;YAAA,uBAAG;cAAA,UAAQX,UAAU,CAACE,OAAO,CAACU,OAAO;YAAC;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QAAI,eACnD;YAAA,uBAAG;cAAA,UAAQV,OAAO,CAACW,KAAK,CAACC,GAAG,CAACL,IAAI,iBAC7B;gBAAiB,SAAS,EAAID,UAAU,CAACC,IAAI,CAAE;gBAAA,gBAAGA,IAAI;cAAA,GAA3CA,IAAI;gBAAA;gBAAA;gBAAA;cAAA,QAClB;YAAC;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QAAI;QAAA;UAAA;UAAA;UAAA;QAAA;MAEb;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAA,GA/ECR,WAAqC;AAAA,KAArCA,WAAqC;AAiFvC,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}